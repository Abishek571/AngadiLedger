// Code Generated by Sidekick is for learning and experimentation purposes only.

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Payment, PartialSettlement, OutstandingBalance } from '../models/payment.model';

@Injectable({
  providedIn: 'root'
})
export class PaymentService {
  private baseUrl = 'http://localhost:8000';

  constructor(private http: HttpClient) {}

  getPaymentsForCustomer(customerId: number): Observable<Payment[]> {
    return this.http.get<Payment[]>(`${this.baseUrl}/payments/customers/${customerId}/payments-from-ledger/`);
  }

  downloadPaymentsCsv(customerId: number): Observable<Blob> {
    return this.http.get(`${this.baseUrl}/customers/${customerId}/download/payments-from-ledger/download-csv/`, { responseType: 'blob' });
  }

  getPartialSettlements(): Observable<PartialSettlement[]> {
    return this.http.get<PartialSettlement[]>(`${this.baseUrl}/payments/customers/partial-settlements/`);
  }

  downloadPartialSettlementsCsv(): Observable<Blob> {
    return this.http.get(`${this.baseUrl}/download/customers/partial-settlements/download-csv/`, { responseType: 'blob' });
  }

  getOutstandingBalances(): Observable<OutstandingBalance[]> {
    return this.http.get<OutstandingBalance[]>(`${this.baseUrl}/payments/customers/outstanding-balances/`);
  }

  downloadOutstandingBalancesCsv(): Observable<Blob> {
    return this.http.get(`${this.baseUrl}/download/customers/outstanding-balances/download-csv/`, { responseType: 'blob' });
  }
  sendOutstandingBalanceReminders(): Observable<{ sent: string[]; failed: { customer: string; reason: string }[] }> {
    return this.http.post<{ sent: string[]; failed: { customer: string; reason: string }[] }>(`${this.baseUrl}/payments/customers/outstanding-balances/send-reminders/`, {});
  }
}
